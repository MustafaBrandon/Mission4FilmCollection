// <auto-generated />
using FilmCollection.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FilmCollection.Migrations
{
    [DbContext(typeof(databaseContext))]
    partial class databaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("FilmCollection.Models.ApplicationResponse", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilmDirector")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilmRating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilmTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FilmYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.HasKey("FilmId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Responses");

                    b.HasData(
                        new
                        {
                            FilmId = 1,
                            CategoryId = 1,
                            Edited = false,
                            FilmDirector = "George Lucas",
                            FilmRating = "PG",
                            FilmTitle = "Indiana Jones and the Raiders of the Lost Ark",
                            FilmYear = 1981,
                            LentTo = "",
                            Notes = ""
                        },
                        new
                        {
                            FilmId = 2,
                            CategoryId = 1,
                            Edited = false,
                            FilmDirector = "Gore Verbinski",
                            FilmRating = "PG-13",
                            FilmTitle = "Pirates of the Caribbean: The Curse of the Black Pearl",
                            FilmYear = 2003,
                            LentTo = "",
                            Notes = ""
                        },
                        new
                        {
                            FilmId = 3,
                            CategoryId = 2,
                            Edited = false,
                            FilmDirector = "Kevin Reynolds",
                            FilmRating = "PG-13",
                            FilmTitle = "The Count of Monte Cristo",
                            FilmYear = 2002,
                            LentTo = "",
                            Notes = ""
                        });
                });

            modelBuilder.Entity("FilmCollection.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Adventure"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Action"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Romance"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Horror"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Thriller"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Mystery"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Drama"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Fantasy"
                        });
                });

            modelBuilder.Entity("FilmCollection.Models.ApplicationResponse", b =>
                {
                    b.HasOne("FilmCollection.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
